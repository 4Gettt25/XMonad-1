;; Author: github.com/NeshHari

;;;;;;;;;;;;;;;;;;;;;;;; QUOTES ;;;;;;;;;;;;;;;;;;;;;;;;
(defpoll quote :interval "24h" "scripts/quotes --quote-and-quotee")

(defwidget quote []
	(box :class "quote-container" :orientation "v" :hexpand "false" :vexpand "true" :space-evenly "false"
        (button :style "background-image :url('images/quote.svg');" :class "quote-img" :halign "center") 
	    (label :class "quote" :halign "center" :wrap "true" :limit-width 300 :text quote)))
(defwindow showquote
    :stacking "fg"
	:geometry (geometry :x "13.5%"
                        :y "4%"
                        :width 300)
(quote))

;;;;;;;;;;;;;;;;;;;;;;;; CALENDAR ;;;;;;;;;;;;;;;;;;;;;;;;
(defpoll calendar_day :interval "10h" "date '+%d'")
(defpoll calendar_year :interval "10h" "date '+%Y'")
(defpoll calendar_date :interval "24h" "date '+%A, %d %B'")

(defwidget cal []
	(box :class "cal-container" 
	(box :class "cal-inner"
	(calendar :class "cal-inner-elems" 
			  :day calendar_day 
			  :year calendar_year))))

(defwidget fullcal[]
  (box :orientation "v" :space-evenly "false" :class "cal-outer-container"
    (box :class "cal-date" "${calendar_date}")
    (cal)
  )
)

(defvar time-visible false)

(defpoll time :interval "60s"
              :initial "initial-value" 
              :run-while time-visible 
  `date +%H:%M' '%p`)

(defwindow mycal
    :stacking "fg"
	:geometry (geometry :x "74.5%" 
						:y "4%" 
						:width "380px" 
						:height "20px")
(fullcal))

;;;;;;;;;;;;;;;;;;;;;;;; SPOTIFY ;;;;;;;;;;;;;;;;;;;;;;;;

(defpoll playpause :interval "0.5s"  "scripts/playpause --icon")
(defpoll songtitle :interval "0.5s" "scripts/playpause --status")
(defpoll singer :interval "0.5s" "scripts/artist")
(defpoll album :interval "0.5s" "scripts/album")
(defpoll coverart :interval "0.5s" "scripts/coverart --art")

(defwidget spotify []
  (box :class "spotify-container" :orientation "h" :space-evenly "true"
    (box :class "spotify-img" :style "background-image: url('${coverart}');")
    (box :class "spotify-inner-right-container" :orientation "v" :valign "center" :halign "center" :space-evenly "false" 
      (box :orientation "v" :spacing 20
        (label :class "spotify-title" :text "${songtitle}" :limit-width "24")
        (label :class "spotify-singer" :text "~ ${singer} ~" :limit-width "20")
        (label :class "spotify-album" :text "${album}" :limit-width "20")
      )
      (box :class "spotify-controls" :orientation "h" :halign "center" :space-evenly "false" :spacing 30
        (button :onclick "playerctl previous" "󰒮")
        (button :onclick "playerctl -p spotify play-pause" "${playpause}")
        (button :onclick "playerctl -p spotify next" "󰒭")
      )
    )
  )
)

(defwindow spotify
    :stacking "fg"
	:geometry (geometry :x "37.2%"
						:y "4%" 
						:width "570px" 
						)
(spotify))

;;;;;;;;;;;;;;;;;;; POWER MENU ;;;;;;;;;;;;;;;;;;;
(defwidget poweroptions []
  (box :class "powermenu-container" :orientation "v" :spacing 30
    (button :class "lock" :onclick "betterlockscreen -l dim" "")
    (button :class "logout" :onclick "pkill xmonad" "󰩈")
    (button :class "suspend" :onclick "systemctl suspend" "󰤄")
    (button :class "restart" :onclick "reboot" "")
    (button :class "shutdown" :onclick "shutdown -h now" "")
  )
)

(defwindow powermenu
    :stacking "fg"
	:geometry (geometry :x "96.7%"
						:y "4%" 
						:width 50)
    (poweroptions)
)


(defwindow powertoggler
    :stacking "fg"
	:geometry (geometry :x "96.8%"
						:y "8px" 
                        :width "40px"
                        :height "40px"
			   )
    (togglepower)
)

(defwindow datetoggler
    :stacking "fg"
	:geometry (geometry :x "79.6%" 
						:y "8px" 
                        :height "40px"
			   )
    (datetime)
)

(defpoll xmonad-layout :interval "1s" `scripts/xmonad_layout`)

(defwidget currentlayout []
	(box :class "xmonad-layout-container" :orientation "h"
		(label :halign "center" :limit-width 5 :text xmonad-layout)))

(defwindow showlayout
    :stacking "fg"
	:geometry (geometry :x "16.3%"
                        :y "0.6%"
                        :height 40)
(currentlayout))

(defpoll wmclass :interval "1s" `scripts/get_wm_class`)

(defwidget focusedclass []
	(box :class "wmclass-container" :hexpand "true" :tooltip "${wmclass}"
		(label :halign "center" :text wmclass :limit-width 20 :show-truncated "true" ))) 

(defwindow showfocusedclass
    :stacking "fg"
	:geometry (geometry :x "19.5%"
                        :y "0.6%"
                        :height 40)
(focusedclass))


(defpoll volume :interval "1s" "amixer -D pulse sget Master | grep 'Left:' | awk -F'[][]' '{ print $2 }' | tr -d '%' | head -1")

(defwidget showvol []
  (box :class "metric" 
       :orientation "h" 
       :space-evenly "false"
       :tooltip volume
    (button :onclick "amixer -D pulse set Master 1+ toggle" "")
    (scale :min 0
           :max 100
           :value volume
           :onchange "amixer -D pulse sset Master {}%"
    )
  )
)


(defpoll wifi-signal :interval "10s" "nmcli -f IN-USE,SIGNAL,SSID device wifi | awk '/^\*/{if (NR!=1) {print $2}}'")

(defwidget showwifi []
  (box :class "metric"
       :orientation "h"
       :space-evenly "false"
       :active "false"
      (box "󰖩")
      (scale :min 0
             :max 100
             :active "false"
             :value {wifi-signal != "" ? wifi-signal : "0.0"}
      )
  )
)           

(defpoll ram :interval "3s" "printf $(free -m | grep Mem | awk '{print ($3/$2)*100}')")

(defwidget showmemory []
  (box :class "metric"
       :orientation "h"
       :space-evenly "false"
       :active "false"
      (box "󰍛")
      (scale :min 0
             :max 100
             :value ram
      )
  )
)           

(defpoll cpu :interval "3s" "top -b -n 1 | grep 'Cpu(s)' | awk '{print $2}'")

(defwidget showcpu []
  (box :class "metric"
       :orientation "h"
       :space-evenly "false"
       :active "false"
      (box "")
      (scale :min 0
             :max 100
             :value cpu
      )
  )
)           

(defwidget sysdata []
  (box :class "metric"
       :orientation "v"
       :space-evenly "false"
       (showvol)
       (showwifi)
       (showcpu)
       (showmemory)
  )
)           

(defwindow showsysdata
    :stacking "fg"
	:geometry (geometry :x "91.6%"
                        :y "4%"
                        :height 40)
(sysdata))

(defwindow sysdatatoggler
    :stacking "fg"
	:geometry (geometry :x "91.5%"
						:y "8px" 
                        :width "100px"
                        :height "40px"
			   )
    (togglesysdata)
)

(defpoll upd :interval "1h" "paru -Qu 2>/dev/null | wc -l")

(defwidget applications []
  (box :orientation "v" :space-evenly "false" :class "app-outer-container"
    (box :orientation "v" :space-evenly "false" :class "app-inner-container" :vexpand "false" :hexpand "false" :valign "center" :spacing 40
    (box :orientation "h" :space-evenly "false" :class "app-inner-container-top" :vexpand "false" :hexpand "false" :valign "center" :spacing 24
      (button :tooltip "Launch Edge" :style "background-image :url('images/edge.svg');" :class "edge" :onclick "scripts/applauncher.sh --edge")
      (button :tooltip "Launch Terminal" :style "background-image :url('images/kitty.svg');" :class "kitty" :onclick "scripts/applauncher.sh --kitty")
      (button :tooltip "Launch Thunar" :style "background-image :url('images/files.svg');" :class "thunar" :onclick "scripts/applauncher.sh --files"))
    (box :orientation "h" :space-evenly "false" :class "app-inner-container-bottom" :vexpand "false" :hexpand "false" :valign "center" :spacing 24
      (button :tooltip "Launch Spotify" :style "background-image :url('images/spotify.svg');" :class "spotify" :onclick "scripts/applauncher.sh --spotify")
      (button :tooltip "Launch Discord" :style "background-image :url('images/discord.svg');" :class "discord" :onclick "scripts/applauncher.sh --discord")
      (button :tooltip "Launch GitHub" :style "background-image :url('images/git.svg');" :class "git" :onclick "scripts/applauncher.sh --git")))))

(defwindow applications
    :stacking "fg"
	:geometry (geometry :x "1.4%"
                        :y "4%"
                        :height 150)
(applications))

(defwidget bar []
  (box :orientation "h" :class "bar" :space-evenly "true" 
    (box :orientation "h" :space-evenly "false" :class "leftofbar"
      (box :class "bar-launcher" :halign "center" :tooltip "Applications"
          (button :class "btn-launcher" :onclick "scripts/customtoggle.sh applications" "" ))
      (box :class "bar-quote" :halign "center" :tooltip "Quote"
          (button :class "btn-quote" :onclick "scripts/customtoggle.sh showquote" "" ))
      (box :class "bar-layout" :halign "center" :tooltip "Layout"
          (button :class "btn-layout"
      	      (label :class "label-layout" :halign "center" :limit-width 5 :text xmonad-layout)))
	  (box :class "bar-wmclass" :hexpand "true" :tooltip "${wmclass}"
          (button :class "btn-wmclass"
	        (label :class "label-wmclass" :halign "start" :text wmclass :limit-width 30 :show-truncated "true" )))
      )
    (box :orientation "h" :space-evenly "true" :class "middleofbar"
      (box :class " bar-spotify"
          (button :class "btn-spotify" :onclick "eww open --toggle spotify" "spotify" )))
    (box :orientation "h" :space-evenly "true" :class "rightofbar"
      (box :class "date"
        (button :class "timebtn" :onclick "eww open --toggle mycal" "${time}" ))
      (box :class "bar-update"
        (button :class "btn-update" :onclick "scripts/update.sh" :tooltip "${upd} updates available"
          (label :class "label-update" :halign "center" :text "")))
      (box :class "sysdatatoggler"
        (button :class "toggle" :onclick "eww open --toggle showsysdata" "" ))
      (box :class "powertoggler"
        (button :class "toggle" :onclick "eww open --toggle powermenu" "󰐦" ))
    )))


(defwindow bar
    :stacking "fg"
    :windowtype "dock"
	:geometry (geometry :x "1.4%"
                        :y "95%"
                        :width "97.2%"
                        :height 40)
    :reserve (struts :side "bottom" :distance "5%")
(bar))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Variables
(defpoll notifications_stats :interval "5s" "scripts/logger.py stats")
(deflisten notifications_sub "scripts/logger.py subscribe")
(defpoll notifications_dnd_state :interval "1s" "dunstctl is-paused")
(defpoll mails :interval "1h" "scripts/getInfo --mail")
(defpoll reddit :interval "1h" "scripts/getInfo --reddit")
(defpoll github :interval "1h" "scripts/getInfo --github")
(defpoll weather_icon :interval "1h" "scripts/getInfo --weather --icon")
(defpoll weather_temp :interval "1h" "scripts/getInfo --weather --temp")
(defpoll dunst_displayed :interval "10s" "dunstctl count displayed")
(defpoll dunst_history :interval "10s" "dunstctl count history")
(defpoll dunst_waiting :interval "10s" "dunstctl count waiting")
(defvar background "/home/syndrizzle/.config/eww/images/texture.png")
;; Widgets
(defwidget dnd [total total_label label dnd_icon state action]
  (box :vexpand false
    :hexpand true
    :class "notifications-dnd-box"
    :space-evenly false
    (box :class "notifications-dnd-labels"
      :hexpand true
      :orientation "h"
      :space-evenly false
      (label :class "dnd-icon-label" :text dnd_icon)
      (label :halign "start"
        :class "notifications-dnd-header"
      :text label)
      (label :halign "start"
      :class "notifications-dnd-footer")
      (box :halign "center"
        :valign "center"
        :orientation "vertical"
        :vexpand true
        :class "notifications-dnd-box-inner"
      :space-evenly false)
      (button :onclick action
        :vexpand true
        :halign "end"
        :valign "end"
      :class "notifications-dnd-toggle notifications-dnd-toggle-${state}" state))))

(defwidget notifications_layout []
  (box :orientation "vertical"
    :space-evenly false
    :class "notifications-layout-box"
    :style "background-image: url('${background}');"
    (box :space-evenly false
      :class "notifications-headers"
      :spacing 6
      (label :text "Notifications"
        :class "notifications-headers-label"
        :halign "start"
      :hexpand true)
      (button :onclick "scripts/combine.sh cls" :class "notifications-headers-clear" "")
      (button :onclick "eww close notifications" :class "notifications-headers-close" ""))
    (scroll :hscroll false
      :vscroll true
      :vexpand true
      :hexpand true
      :class "notifications-scroll"
      (literal :content notifications_sub))
    (label :class "notifications-separator" :text "")
    (box :space-evenly false :class "notifications-misc-box" :orientation "v"
      (dnd :total "${notifications_stats.total}"
        :total_label "Total"
        :action "dunstctl set-paused toggle"
        :dnd_icon ""
        :state "${notifications_dnd_state == "true" ? "ON" : "OFF"}"
      :label "Don't Disturb.")
      (box :class "notifications-quad-tiles-box" :orientation "v"
        (box :class "notifications-quad-tiles-box-one" :space-evenly "true" :spacing 20
          (button :class "notifications-mail-button" :tooltip "Click to check unread GMails." :onclick "xdg-open https://gmail.com"
            (box :class "mail-button-box" :space-evenly "true"
              (label :class "notifications-mail-button-logo" :text "")
              (label :class "notifications-mail-button-label" :text "${mails}")))
          (button :class "notifications-reddit-button" :tooltip "Click to check Reddit notifications." :onclick "xdg-open https://reddit.com"
            (box :class "reddit-button-box" :space-evenly "true"
              (label :class "notifications-reddit-button-logo" :text "")
              (label :class "notifications-reddit-button-label" :text "${reddit}"))))
        (box :class "notifications-quad-tiles-box-two" :space-evenly "true" :spacing 20
          (button :class "notifications-github-button" :tooltip "Click to check GitHub notifications." :onclick "xdg-open https://github.com"
            (box :class "github-button-box" :space-evenly "true"
              (label :class "notifications-github-button-logo" :text "")
              (label :class "notifications-github-button-label" :text "${github}")))
          (button :class "notifications-weather-button" :tooltip "Click to update the weather" :onclick "scripts/getInfo --update-weather"
            (box :class "weather-button-box" :space-evenly "true"
              (label :class "notifications-weather-button-logo" :text "${weather_icon}")
              (label :class "notifications-weather-button-label" :text "${weather_temp}"))))))))

(defwidget cardimage [summary body ?limit_summary ?limit_body appname icon icon_width icon_height close ?close_action image image_width image_height timestamp urgency]
  (eventbox :class "notifications-cardimage-eventbox notifications-cardimage-eventbox-${urgency}"
    (box :orientation "vertical"
      :space-evenly false
      :class "notifications-cardimage-container-box notifications-cardimage-container-box-${urgency}"
      (box :class "notifications-cardimage-summary-box notifications-cardimage-summary-box-${urgency}"
        :space-evenly false
        :spacing 6
        (label :text appname
          :hexpand true
          :halign "start"
        :class "notifications-cardimage-appname-label notifications-cardimage-appname-label-${urgency}")
        (button :class "notifications-cardimage-close-button notifications-cardimage-close-button-${urgency}"
          :onclick close_action
          :timeout "2s"
          (label :text close
          :class "notifications-cardimage-close-icon notifications-cardimage-close-icon-${urgency}")))
      
      (box :class "notifications-cardimage-separator notifications-cardimage-separator-${urgency}"
      :space-evenly false)
      
      (box :class "notifications-cardimage-body-box notifications-cardimage-body-box-${urgency}"
        :space-evenly false
        (box :halign "center"
          :valign "center"
          :class "notifications-cardimage-image-box notifications-cardimage-image-box-${urgency}"
          (box :style "background-image: url('${image}')"
            :hexpand false
            :vexpand false
            :width image_width
            :height image_height
            :space-evenly false
          :class "notifications-cardimage-image notifications-cardimage-image-${urgency}"))
        
        (box :hexpand true
          :vexpand true
          :valign "center"
          :orientation "vertical"
          :spacing 5
          :class "notifications-cardimage-body-outer notifications-cardimage-body-outer-${urgency}"
          :space-evenly false
          (label :text summary
            :limit-width "${limit_summary != "" ? limit_summary : 25}"
            :halign "start"
          :class "notifications-cardimage-summary-label notifications-cardimage-summary-label-${urgency}")
          (label :text body
            :halign "start"
            :limit-width "${limit_body != "" ? limit_body : 110}"
            :xalign 0.0
            :wrap true
          :class "notifications-cardimage-body-label notifications-cardimage-body-${urgency}")
          (label :text timestamp
            :halign "end"
          :class "notifications-cardimage-timestamp notifications-cardimage-timestamp-${urgency}"))))))

(defwidget cardprog [summary body ?limit_summary ?limit_body appname icon icon_width icon_height close ?close_action image image_width image_height timestamp urgency progress]
  (eventbox :class "notifications-cardprog-eventbox notifications-cardprog-eventbox-${urgency}"
    (box :orientation "vertical"
      :space-evenly false
      :class "notifications-cardprog-container-box notifications-cardprog-container-box-${urgency}"
      (box :class "notifications-cardprog-summary-box notifications-cardprog-summary-box-${urgency}"
        :space-evenly false
        :spacing 6
        (label :text appname
          :hexpand true
          :halign "start"
        :class "notifications-cardprog-appname-label notifications-cardprog-appname-label-${urgency}")
        (button :class "notifications-cardprog-close-button notifications-cardprog-close-button-${urgency}"
          :onclick close_action
          :timeout "2s"
          (label :text close
          :class "notifications-cardprog-close-icon notifications-cardprog-close-icon-${urgency}")))
      (box :class "notifications-cardprog-separator notifications-cardprog-separator-${urgency}"
      :space-evenly false)
      (box :class "notifications-cardprog-body-box notifications-cardprog-body-box-${urgency}"
        :space-evenly false
        (box :halign "center"
          :valign "center"
          :class "notifications-cardprog-image-box notifications-cardprog-image-box-${urgency}"
          (box :style "background-image: url('${image}')"
            :hexpand false
            :vexpand false
            :width image_width
            :height image_height
            :space-evenly false
          :class "notifications-cardprog-image notifications-cardprog-image-${urgency}"))
        (box :spacing 1
          :hexpand true
          :vexpand true
          :valign "center"
          :orientation "vertical"
          :class "notifications-cardprog-body-outer notifications-cardprog-body-outer-${urgency}"
          :space-evenly false
          (box :class "notifications-cardprog-summary-body-box notifications-cardprog-summary-body-box-${urgency}"
            (label :limit-width "${limit_summary != "" ? limit_summary : 25}"
              :text summary
              :halign "start"
            :class "notifications-cardprog-summary-label notifications-cardprog-summary-label-${urgency}")
            (label :text timestamp
              :halign "end"
            :class "notifications-cardprog-timestamp notifications-cardprog-timestamp-${urgency}"))
          (label :limit-width "${limit_body != "" ? limit_body : 110}"
            :text body
            :halign "start"
            :wrap true
            :xalign 0.0
          :class "notifications-cardprog-body-label notifications-cardprog-body-${urgency}")
          (box :spacing 15
            :class "notifications-cardprog-scale-box notifications-cardprog-scale-box-${urgency}"
            :space-evenly false
            (scale :hexpand true
              :class "notifications-cardprog-scale notifications-cardprog-scale-${urgency}"
              :min 0
              :max 100
              :active false
            :value progress)
            (label :class "notifications-cardprog-value-label notifications-cardprog-value-label-${urgency}"
            :text progress)))))))

(defwidget cardradial [ summary body ?limit_summary ?limit_body appname close ?close_action timestamp urgency progress thickness total done]
  (eventbox :class "notifications-cardradial-eventbox notifications-cardradial-eventbox-${urgency}"
    (box :orientation "vertical"
      :space-evenly false
      :class "notifications-cardradial-container-box notifications-cardradial-container-box-${urgency}"
      (box :class "notifications-cardradial-summary-box notifications-cardradial-summary-box-${urgency}"
        :space-evenly false
        (label :text appname
          :hexpand true
          :halign "start"
        :class "notifications-cardradial-appname-label notifications-cardradial-appname-label-${urgency}")
        (button :class "notifications-cardradial-close-button notifications-cardradial-close-button-${urgency}"
          :onclick close_action
          :timeout "2s"
          (label :text close
          :class "notifications-cardradial-close-icon notifications-cardradial-close-icon-${urgency}")))
      (box :class "notifications-cardradial-separator notifications-cardradial-separator-${urgency}"
      :space-evenly false)
      (box :class "notifications-cardradial-body-box notifications-cardradial-body-box-${urgency}"
        :space-evenly false
        (box :halign "center"
          :valign "center"
          :class "notifications-cardradial-circle-box notifications-cardradial-circle-box-${urgency}"
          (circular-progress :value progress
            :thickness thickness
            :class "notifications-cardradial-circle notifications-cardradial-circle-${urgency}"
            (label :class "notifications-cardradial-tasks notifications-cardradial-tasks-${urgency}"
            :text "${done}/${total}")))
        (box :hexpand true
          :vexpand true
          :valign "center"
          :spacing 5
          :orientation "vertical"
          :class "notifications-cardradial-body-outer notifications-cardradial-body-outer-${urgency}"
          :space-evenly false
          (label :limit-width "${limit_summary != "" ? limit_summary : 25}"
            :text summary
            :halign "start"
          :class "notifications-cardradial-summary-label notifications-cardradial-summary-label-${urgency}")
          (label :limit-width "${limit_body != "" ? limit_body : 110}"
            :text body
            :xalign 0.0
            :halign "start"
            :wrap true
          :class "notifications-cardradial-body-label notifications-cardradial-body-${urgency}")
          (label :text timestamp
            :halign "end"
          :class "notifications-cardradial-timestamp notifications-cardradial-timestamp-${urgency}"))))))

(defwidget cardscr [ summary ?limit_summary close ?close_action image image_width image_height timestamp urgency delete open]
  (eventbox :class "notifications-cardscr-eventbox notifications-cardscr-eventbox-${urgency}"
    (box :orientation "vertical"
      :space-evenly false
      :class "notifications-cardscr-container-box notifications-cardscr-container-box-${urgency}"
      (box :space-evenly false
        :class "notifications-cardscr-summary-box notifications-cardscr-summary-box-${urgency}"
        (label :hexpand true
          :limit-width "${limit_summary != "" ? limit_summary : 25}"
          :halign "start"
          :class "notifications-cardscr-summary-label notifications-cardscr-summary-label-${urgency}"
        :text summary)
        (label :class "notifications-cardscr-timestamp notifications-cardscr-timestamp-${urgency}"
        :text timestamp)
        (button :class "notifications-cardscr-close-button notifications-cardscr-close-button-${urgency}"
          :onclick close_action
          :timeout "2s"
          (label :text close
          :class "notifications-cardscr-close-icon notifications-cardscr-close-icon-${urgency}")))
      (box :class "notifications-cardscr-image"
        :style "background-image: url('${image}')"
        :width image_width
        :height image_height
      :space-evenly false)
      (box :spacing 20
        :space-evenly true
        :class "notifications-cardscr-action-box notifications-cardscr-action-box-${urgency}"
        :hexpand true
        :halign "center"
        (button :class "notifications-cardscr-open-button notifications-cardscr-open-button-${urgency}"
          :onclick open :timeout "2s"
          (label :text "Open"
          :class "notifications-cardscr-open-label notifications-cardscr-open-label-${urgency}"))
        (button :class "notifications-cardscr-delete-button notifications-cardscr-delete-button-${urgency}"
          :onclick delete :timeout "2s"
          (label :text "Delete"
          :class "notifications-cardscr-delete-label notifications-cardscr-delete-label-${urgency}"))))))

;; Windows
(defwindow notifications :stacking "fg"
  :windowtype "dock"
  :wm-ignore true
  :geometry (geometry :x 18 :y 40 :width "26%" :height "90%" :anchor "left center")
  (notifications_layout))


